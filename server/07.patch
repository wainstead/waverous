diff -Nur tORIGINAL/projects/moo/src/net_multi.c d20040322/projects/moo/src/net_multi.c
--- tORIGINAL/projects/moo/src/net_multi.c	2004-03-22 11:14:54.000000000 -0500
+++ d20040322/projects/moo/src/net_multi.c	2004-03-22 11:31:52.000000000 -0500
@@ -41,6 +41,10 @@
 #include "timers.h"
 #include "utils.h"
 
+#ifdef NETWORK_IDENT
+#include <ident.h>
+#endif
+
 static struct proto proto;
 static int eol_length;		/* == strlen(proto.eol_out_string) */
 
@@ -82,6 +86,8 @@
 #if NETWORK_PROTOCOL == NP_TCP
     int client_echo;
 #endif
+    char *user_name;
+    int user_client;
 } nhandle;
 
 static nhandle *all_nhandles = 0;
@@ -322,6 +328,18 @@
 #if NETWORK_PROTOCOL == NP_TCP
     h->client_echo = 1;
 #endif
+    h->user_name = NULL;
+
+#ifdef NETWORK_IDENT
+    if (server_int_option("ident_lookup", 1)) {
+      h->user_name = ident_id(rfd, server_int_option("ident_lookup_timeout", 5));
+    }
+#endif
+
+    h->user_client = 0;
+    if (!h->user_name || h->user_name[0] == '[') {
+      h->user_name = str_dup("unknown");
+    }
 
     stream_printf(s, "%s %s %s",
 		  local_name, outbound ? "to" : "from", remote_name);
@@ -610,6 +628,14 @@
     return h->name;
 }
 
+const char *
+network_connection_user(network_handle nh)
+{
+    nhandle *h = (nhandle *) nh.ptr;
+
+    return h->user_name;
+}
+
 void
 network_set_connection_binary(network_handle nh, int do_binary)
 {
@@ -633,6 +659,13 @@
     list = listappend(list, pair);
 #endif
 
+    pair = new_list(2);
+    pair.v.list[1].type = TYPE_STR;
+    pair.v.list[1].v.str = str_dup("user-client");
+    pair.v.list[2].type = TYPE_INT;
+    pair.v.list[2].v.num = h->user_client;
+    list = listappend(list, pair);
+ 
     return list;
 }
 
@@ -649,6 +682,12 @@
     }
 #endif
 
+    if (!mystrcasecmp(option, "user-client")) {
+        value->type = TYPE_INT;
+        value->v.num = h->user_client;
+        return 1;
+    }
+
     return 0;
 }
 
@@ -680,6 +719,11 @@
     }
 #endif
 
+    if (!mystrcasecmp(option, "user-client")) {
+        h->user_client = value.v.num;
+        return 1;
+    }
+
     return 0;
 }
 
